import * as yup from "yup";

export const profileValidSchema = yup.object().shape({
  firstname: yup

    .string()
    .required("Поле обязательно для заполнения")
    .min(2, ({ min }) => `Минимальное количество символов ${min} `)
    .max(30, ({ max }) => `Максимальное количество символов ${max} `)

    .matches(/^[a-zA-Z-]{2,30}$/, "Разрешён ввод букв"),
  lastname: yup
    .string()
    .required("Поле обязательно для заполнения")
    .min(3, ({ min }) => `Минимальное количество символов ${min} `)
    .max(30, ({ max }) => `Максимальное количество символов ${max} `)

    .matches(/^[a-zA-Z-]{3,30}$/, "Разрешён ввод букв"),
  email: yup
    .string()
    .required("Поле обязательно для заполнения")
    .matches(
      /^([a-zA-Z0-9]{3,64})@([a-zA-Z0-9.-]{3,253})\.(com|org|net|ru)$/,
      "Электронная почта должна быть в формате xxx@yyy.zzz"
    ),
  phone: yup
    .string()
    .required("Поле обязательно к заполнению")
    .matches(
      /^(\+?375-?|8-?0)(25|29|44|33|17)-?([1-9]\d{2})(-?\d{2}){2}$/,
      "Номер введён некорректно"
    ),
  // password: yup
  //   .string()
  //   .min(8, "Пароль не может содержать менее 8 символов")
  //   .max(15, "Пароль не может содержать более 15 символов")
  //   .required("Поле обязательно к заполнению")
  //   .matches(
  //     /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z\d]{8,15}$/,
  //     "[Пароль должен содержать 8-15 символов, без пробелов и специальных знаков (#, %, &, !, $, etc.)"
  //   ),
});
